name: itemzflow version

on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 */3 * * *'  # 每6小时运行一次

jobs:
  process_package:
    runs-on: windows-latest

    steps:
    - name: Get current file name from GitHub repo  # 从 GitHub 上获取当前文件名
      id: get_current_file_name
      shell: pwsh
      run: |
        $url = "https://raw.githubusercontent.com/PSGO/Itemzflow-PS5-CN/refs/heads/main/version.txt"
        $currentFileName = (Invoke-WebRequest -Uri $url -Method Get | Select-Object -ExpandProperty Content).Trim()
        Write-Output "Current file name from GitHub: '$currentFileName'"
        echo "::set-output name=current_file_name::$currentFileName"  # 设置输出

    - name: Get file name from URL  # 获取文件名
      id: get_latest_file_name
      shell: pwsh
      run: |
        $url = "https://pkg-zone.com/download/ps5/ITEM00001/latest"
        $response = Invoke-WebRequest -Uri $url -Method Head
        $fileNameMatch = $response.Headers["Content-Disposition"]
        $latestFileName = ($fileNameMatch -replace "attachment; version=", "" -replace ".pkg", "").Trim()
        Write-Output "File name from URL: '$latestFileName'"
        echo "::set-output name=latest_file_name::$latestFileName"  # 设置输出
        
        # 输出字符的字节值，进行详细的字符比较
        $currentFileName = "${{ steps.get_current_file_name.outputs.current_file_name }}"  # 从上一步获取文件名

        # 输出每个字符的字节值
        Write-Output "Current File Name Bytes: $([BitConverter]::ToString([System.Text.Encoding]::UTF8.GetBytes($currentFileName)))"
        Write-Output "Latest File Name Bytes: $([BitConverter]::ToString([System.Text.Encoding]::UTF8.GetBytes($latestFileName)))"

        # 比较字符字节
        if ($currentFileName.Trim() -eq $latestFileName.Trim()) {
            Write-Output "文件名完全一致，未发生变化"
            exit 1
        } else {
            Write-Output "文件名发生变化，发布了新版本: $latestFileName"
        }

    - name: Checkout repository  # 检出仓库内容
      uses: actions/checkout@v2

    - name: Update version.txt in the repository  # 更新 version.txt 文件
      shell: pwsh
      run: |
        $fileNamePath = "version.txt"
        $latestFileName = "${{ steps.get_latest_file_name.outputs.latest_file_name }}"  # 获取最新文件名
        Set-Content -Path $fileNamePath -Value $latestFileName
        Write-Host "已将新的文件名保存到 $fileNamePath"

    - name: Commit and push updated version.txt  # 提交并推送更新
      shell: pwsh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add version.txt
        git commit -m "Update ${{ steps.get_latest_file_name.outputs.latest_file_name }}"
        git push origin main
